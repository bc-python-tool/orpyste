==========
2015-11-???
==========

**NON RÉTRO-COMPATIBILITÉ du nouveau code du module ``orpyste``:** cette nouvelle version n'est plus du tout compatible avec la précédente. Bien que la philosophie reste inchangée, les spécifications ¨peufs se sont améliorées et l'interface a été énormément simplifiée
((
    Côté code, on utilise au maximum l'abstraction pour améliorer la maintenance mais aussi pour préparer un autre projet personnel de type "parser universel". Tout est loin d'être parfait mais cela reste de bien meilleure qualité que la version précédente du code.
)).
Voir les ¨chgts directement dans les "docstrings" en attendant la mise en ligne d'une documentation (désolé c'est en anglais).


**Une nouvelle fonctionnalité pour "nettoyer" les fichiers ¨orpyste:** le nouveau module ``clean`` contient une classe ``Clean`` qui produit une version standardisée "propre et compacte" d'un fichier ¨peuf valide.


**Amélioration des docstrings de ``orpyste``:** la syntaxe utilisée se base sur de nouvelles spécifications de ¨pybadoc, un outil maison en cours de construction. On utilise des exemples "en console" pour rendre le propos plus clair, et on peut indiquer les signatures des fonctions, des classes, ¨etc via le bloc pybadoc::``prototype::...`` à placer en début de docstring. Très lisible et très efficace !


**Amélioration côté développement interne :** voici ce qui a évolué.

    1) Dans un souci de développement serein, on utilise dorénavant ¨git via une branche ``dev``.

    2) L'utilisation de ¨pyvenv permet aussi d'éviter des dégâts colatéraux non négligeables avec les versions en cours de développement (l'environnement virtuel se nomme ``pyenv/orpyste``). Fini l'amateurisme !


**Amélioration et mise à jour des tests :** voici ce qui a été fait.

    1) On utilise maintenant ¨pytest ce qui simplifie énormément les choses. On va enfin à l'essentiel !

    2) Les tests sont disponibles sur ¨github afin que les utilisateurs avertis puissent tester leur installation, mais ils ne le sont pas sur ¨pypi pour ne pas polluer ¨python lors d'une installation de ¨orpyste.

    3) L'affreux package maison ``pdt`` n'est plus du tout utilisé (ceci a pu être fait car la nouvelle version de ¨orpyste n'est plus du tout dépendante de ¨mistool). Et oui, on se professionnalise... ;-)
