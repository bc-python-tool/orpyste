==============
orPySte - TODO
==============

> ---------------------------- <

en gradnat list des blocs imbriqués , on peut faire des opérations impoertantes : nom unique iy schéma unique bien pour xpath !


> ---------------------------- <

???? ---------->    **Utilisation de ``setuptools`` :** comme ``pip`` a décidé d'abandonner le support de ``distutils``, il a fallu accélérer l'utilisation de ``setuptools``, un outil plus sympathique à employer. Ceci se fait très efficacement grâce à ¨setytup un autre projet de l'auteur de ¨mistool. ¨setytup est disponible sur ¨pypi et ¨github.


???? ---------->    **Publication de la nouvelle version de ``orpyste`` :** le projet est hebergé à la fois sur les sites ¨github et ¨pypi.


???? ---------->    **Amélioration du fichier ``README.md`` :** des exemples "en console" ont été ajoutés afin de rendre le package plus "bankable".


???? ---------->    **Noms des versions :** les numéros de version deviennent standards en suivant la convention ``majeur.mineur.patch``. Cette norme étant suivie par tout le monde, soyons grégaire pour devenir clair... De plus, ceci est compatible avec la ¨pep_440 tout en étant nécessaire pour un utilisateur souhaitant installer ¨orpyste via ¨pip.

Cette version de ¨orpyste a pour numéro ``1.0.0-beta`` car le projet propose une nouvelle interface tout en restant à l'état `¨beta` (il reste à l'utiliser un peu pour voir si le `¨beta` est de trop).


???? ---------->    **Ajout d'une licence :** le projet est maintenant sous licence ???.


> ---------------------------- <

fair un système via clé de hashage qui ne refait le boulot que si nécessaire dans le cas d'un IOViwe sur disque dur


> ---------------------------- <

searching path !!!!


a::
    b::
        c::
            ...


c::
    ...


blocs c via "(.)c" : cf regex inrtégré
    ---> on surcharge dict via méthode qui permet de passer d'un path à la version clé par clé


> ---------------------------- <

???? Schema !!!!
**Une belle amélioration :** un modèle de données, éventuellement typées, peut être indiqué . Ceci se fait simplement, et sans surprise, via la définition d'un fichier modèle de type ¨peuf d'une façon analogue aux cf::``schémas JSON ; http://json-schema.org``.


> ---------------------------- <

**Amélioration côté développement interne :** voici ce qui a évolué.

    1) L'effacité des tests est évaluée à l'aide de ¨coverage.

    2) ¨pep8py et ¨pylint sont aussi consultés pour améliorer le code lorsque cela paraît pertinent.


> ---------------------------- <

**Mise en ligne d'une documentation non technique en français :** ceci a été rendu possible grâce au projet ¨pyba qui lui aussi est disponible sur ¨pypi et ¨github.


> ---------------------------- <

**Mise en ligne de la documentation technique en anglais uniquement :** ceci a été rendu possible grâce au projet ¨pybadoc qui lui aussi est disponible sur ¨pypi et ¨github.


> ---------------------------- <

cleaner
    ---> commentaire dans multi-key se placent relatovemnt à la clé-valeur en cours et no au tout début
